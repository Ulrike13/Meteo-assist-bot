from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.types import (InlineKeyboardMarkup, CallbackQuery,
                           InlineKeyboardButton, Message, ContentType)
from aiogram.utils.exceptions import BotBlocked

from bot import bot, dp
from logger import logger
from weather.weather_hints import get_hint
from weather.weather_messages import get_message
from weather.weather_service import (get_weather_for_city,
                                     get_weather_for_location,
                                     WEATHER_FOR_LOC_FAILED_MESSAGE)

GREETINGS_TEXT = ('–ü—Ä–∏–≤–µ—Ç! –Ø –≤–∞—à –ª–∏—á–Ω—ã–π –º–µ—Ç–µ–æ—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –ø–æ–º–æ—â–Ω–∏–∫.\n–ú–æ–≥—É '
                  '–ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –≤–∞–º —Ç–µ–∫—É—â–∏–π –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã –∫–∞–∫ –ø–æ –≥–æ—Ä–æ–¥—É, '
                  '—Ç–∞–∫ –∏ –ø–æ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏.\n\n–ü—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –Ω—É–∂–Ω—É—é –∫–Ω–æ–ø–∫—É '
                  '–≤ –º–µ–Ω—é, –ø–æ—Å–ª–µ —á–µ–≥–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –∏–ª–∏ —Å–≤–æ—é '
                  '–≥–µ–æ–ø–æ–∑–∏—Ü–∏—é, –∏ —è –ø–æ–¥–µ–ª—é—Å—å —Å –≤–∞–º–∏ –∞–∫—Ç—É–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π '
                  '–æ –ø–æ–≥–æ–¥–µ.\n\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏ —É–∑–Ω–∞–π—Ç–µ, –∫–∞–∫–∞—è –ø–æ–≥–æ–¥–∞ –≤–∞—Å '
                  '–æ–∂–∏–¥–∞–µ—Ç! üå¶Ô∏èüå§Ô∏è')
MENU_TEXT = (f'üå¶Ô∏è –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –≤ –º–µ—Ç–µ–æ-–º–µ–Ω—é üåßÔ∏è\n\n'
             f'–ö–∞–∫ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã?\n'
             f'üèôÔ∏è –í—ã–±–µ—Ä–∏—Ç–µ "–ü–æ–≥–æ–¥–∞ –ø–æ –≥–æ—Ä–æ–¥—É" –¥–ª—è –≤–≤–æ–¥–∞ –Ω–∞–∑–≤–∞–Ω–∏—è –≥–æ—Ä–æ–¥–∞.\n'
             f'üåê –ò–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ "–ü–æ–≥–æ–¥–∞ –ø–æ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏" –¥–ª—è '
             f'–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤–∞—à–µ–π —Ç–µ–∫—É—â–µ–π –≥–µ–æ–ø–æ–∑–∏—Ü–∏–∏.\n\n'
             f'–ü—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫ –Ω–∏–∂–µ –∏ –Ω–∞—á–Ω–µ–º! ‚¨áÔ∏è')
START_GET_WEATHER_TEXT = (f'–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ '
                          f'–¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–π –ø–æ–≥–æ–¥—ã:')
START_GET_WEATHER_IN_LOC_TEXT = (f'–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à—É –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é –¥–ª—è '
                                 f'–ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–π –ø–æ–≥–æ–¥—ã:')
CANCEL_TEXT = '–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –º–µ–Ω—é!\n\n' + MENU_TEXT
UNKNOWN_COMMAND_TEXT = (f'–Ø –Ω–µ –∑–Ω–∞—é —Ç–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã.\n–ù–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –≤—ã '
                        f'—Å–º–æ–∂–µ—Ç–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤—Å–µ–º –º–æ–∏–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–æ–º. ‚¨áÔ∏è')


class WaitingForCityInput(StatesGroup):
    city = State()


class WaitingForLocationInput(StatesGroup):
    location = State()


@dp.message_handler(commands=['start'])
async def start(message: Message) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start. –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.

    –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
        message (Message): –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è.
    """
    keyboard = InlineKeyboardMarkup()
    button_menu = InlineKeyboardButton('–ú–µ–Ω—é', callback_data='menu')
    keyboard.row(button_menu)

    await bot.send_message(chat_id=message.chat.id, text=GREETINGS_TEXT,
                           reply_markup=keyboard)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ú–µ–Ω—é"
@dp.callback_query_handler(lambda c: c.data == 'menu')
@dp.message_handler(commands=['menu'])
async def start_menu(message: Message or CallbackQuery) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ú–µ–Ω—é". –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –º–µ–Ω—é —Å –≤—ã–±–æ—Ä–æ–º —Ç–∏–ø–∞ –ø—Ä–æ–≥–Ω–æ–∑–∞ –ø–æ–≥–æ–¥—ã.

    –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
        message (Message or CallbackQuery): –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –∏–ª–∏ –∫–æ–ª–ª–±—ç–∫–∞.
    """
    keyboard = InlineKeyboardMarkup()
    btn_city_weather = InlineKeyboardButton('–ü–æ–≥–æ–¥–∞ –ø–æ –≥–æ—Ä–æ–¥—É',
                                            callback_data='weather_in_city')
    btn_loc_weather = InlineKeyboardButton(
        '–ü–æ–≥–æ–¥–∞ –ø–æ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏',
        callback_data='weather_from_location'
    )
    keyboard.row(btn_city_weather)
    keyboard.row(btn_loc_weather)

    if type(message) == CallbackQuery:
        await bot.edit_message_reply_markup(message.message.chat.id,
                                            message.message.message_id,
                                            reply_markup=None)

    await bot.send_message(message.from_user.id,
                           text=MENU_TEXT,
                           reply_markup=keyboard)


@dp.callback_query_handler(lambda c: c.data == 'weather_in_city')
async def start_get_weather_in_city_callback(
        callback_query: CallbackQuery) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ü–æ–≥–æ–¥–∞ –ø–æ –≥–æ—Ä–æ–¥—É". –ó–∞–ø—É—Å–∫–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å
    –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã –ø–æ –≥–æ—Ä–æ–¥—É.

    –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
        callback_query (CallbackQuery): –û–±—ä–µ–∫—Ç –∫–æ–ª–ª–±—ç–∫–∞.
    """
    keyboard = InlineKeyboardMarkup()
    button_cancel = InlineKeyboardButton('–û—Ç–º–µ–Ω–∞', callback_data='cancel')
    keyboard.row(button_cancel)

    await callback_query.answer()
    sent_message = await callback_query.message.edit_text(
        START_GET_WEATHER_TEXT,
        reply_markup=keyboard)

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º message_id —á—Ç–æ–±—ã –ø–æ—Ç–æ–º —É–¥–∞–ª–∏—Ç—å –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞.
    state = dp.current_state(chat=callback_query.from_user.id)
    await state.update_data(last_message_id=sent_message.message_id)

    await WaitingForCityInput.city.set()


@dp.callback_query_handler(lambda c: c.data == 'weather_from_location')
async def start_get_weather_from_location_callback(
        callback_query: CallbackQuery) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ü–æ–≥–æ–¥–∞ –ø–æ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏". –ó–∞–ø—É—Å–∫–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å
    –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã –ø–æ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏.

    –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
        callback_query (CallbackQuery): –û–±—ä–µ–∫—Ç –∫–æ–ª–ª–±—ç–∫–∞.
    """
    keyboard = InlineKeyboardMarkup()
    button_cancel = InlineKeyboardButton('–û—Ç–º–µ–Ω–∞', callback_data='cancel')
    keyboard.row(button_cancel)

    await callback_query.answer()
    sent_message = await callback_query.message.edit_text(
        START_GET_WEATHER_IN_LOC_TEXT,
        reply_markup=keyboard)

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º message_id —á—Ç–æ–±—ã –ø–æ—Ç–æ–º —É–¥–∞–ª–∏—Ç—å –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞.
    state = dp.current_state(chat=callback_query.from_user.id)
    await state.update_data(last_message_id=sent_message.message_id)

    await WaitingForLocationInput.location.set()


@dp.callback_query_handler(lambda c: c.data == 'cancel', state='*')
async def cancel_handler(callback_query: CallbackQuery,
                         state: FSMContext) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–û—Ç–º–µ–Ω–∞". –û—Ç–º–µ–Ω—è–µ—Ç —Ç–µ–∫—É—â–∏–π –∑–∞–ø—Ä–æ—Å –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤ –º–µ–Ω—é.

    –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
        callback_query (CallbackQuery): –û–±—ä–µ–∫—Ç –∫–æ–ª–ª–±—ç–∫–∞.

        state (FSMContext): –û–±—ä–µ–∫—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –±–æ—Ç–∞.
    """
    current_state = await state.get_state()
    if current_state is None:
        return

    keyboard = InlineKeyboardMarkup()
    button_city_weather = InlineKeyboardButton(
        '–ü–æ–≥–æ–¥–∞ –ø–æ –≥–æ—Ä–æ–¥—É',
        callback_data='weather_in_city'
    )
    button_loc_weather = InlineKeyboardButton(
        '–ü–æ–≥–æ–¥–∞ –ø–æ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏',
        callback_data='weather_from_location'
    )
    keyboard.row(button_city_weather)
    keyboard.row(button_loc_weather)

    await state.finish()

    await callback_query.answer('–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ')
    await callback_query.message.edit_text(CANCEL_TEXT, reply_markup=keyboard)


@dp.message_handler(state=WaitingForCityInput.city)
async def get_weather_in_city(message: Message,
                              state: FSMContext) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –≥–æ—Ä–æ–¥–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã. –í—ã–≤–æ–¥–∏—Ç –ø–æ–≥–æ–¥—É
    –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤ –º–µ–Ω—é.

    –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
        message (Message): –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è.

        state (FSMContext): –û–±—ä–µ–∫—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –±–æ—Ç–∞.
    """
    keyboard = InlineKeyboardMarkup()
    btn_menu = InlineKeyboardButton('–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é', callback_data='menu')
    keyboard.row(btn_menu)

    user_input = message.text
    async with state.proxy() as data:
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é city.
        data['city'] = user_input.capitalize()

    state_data = await state.get_data()
    last_message_id = state_data.get('last_message_id')

    try:
        weather = await get_weather_for_city(data['city'])

        response = (
            await get_message('weather_in_city_message')
        ).format(
            data['city'], weather.status, weather.temperature
        ) + '\n\n' + (
            await get_hint(weather)
        )

        await bot.send_message(message.chat.id, response,
                               reply_markup=keyboard)

    except AttributeError:
        await bot.send_message(message.chat.id,
                               WEATHER_FOR_LOC_FAILED_MESSAGE,
                               reply_markup=keyboard)

    # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞, —Å–æ–∑–¥–∞–Ω–Ω–æ–µ —á–µ—Ä–µ–∑ Callback_Query.
    await bot.delete_message(message.chat.id, last_message_id)

    await state.finish()  # –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–≤–æ–¥–∞.


@dp.message_handler(content_types=ContentType.LOCATION,
                    state=WaitingForLocationInput.location)
async def get_weather_in_location(message: Message, state: FSMContext) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–ª—É—á–µ–Ω–∏—è –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã. –í—ã–≤–æ–¥–∏—Ç –ø–æ–≥–æ–¥—É
    –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤ –º–µ–Ω—é.

    –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
        message (Message): –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è.

        state (FSMContext): –û–±—ä–µ–∫—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –±–æ—Ç–∞.
    """
    keyboard = InlineKeyboardMarkup()
    button_menu = InlineKeyboardButton('–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é',
                                       callback_data='menu')
    keyboard.row(button_menu)

    user_input = message.location
    async with state.proxy() as data:
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é city.
        data['location'] = user_input

    state_data = await state.get_data()
    last_message_id = state_data.get('last_message_id')
    try:
        logger.debug(f'–ü–æ–ª—É—á–µ–Ω–∞ –≥–µ–æ–ª–æ–∫–∞—Ü–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è '
                     f'{message.chat.id}. –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–≥–æ–¥—É.')
        weather = await get_weather_for_location(data['location'])
        logger.debug(f'–ü–æ–≥–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.chat.id} '
                     f'—É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω–∞. –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç.')

        response = (
            await get_message('weather_in_city_message')
        ).format(
            weather.name, weather.status, weather.temperature
        ) + '\n\n' + (
            await get_hint(weather)
        )

        await bot.send_message(message.chat.id, response,
                               reply_markup=keyboard)

    except AttributeError:
        await bot.send_message(message.chat.id,
                               WEATHER_FOR_LOC_FAILED_MESSAGE,
                               reply_markup=keyboard)

    # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞, —Å–æ–∑–¥–∞–Ω–Ω–æ–µ —á–µ—Ä–µ–∑ Callback_Query.
    await bot.delete_message(message.chat.id, last_message_id)

    await state.finish()  # –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–≤–æ–¥–∞.


@dp.message_handler()
async def unknown_command_message(message: Message) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã –∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏—è. –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    —Ç–µ–∫—Å—Ç –æ—à–∏–±–∫–∏.

    –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
        message (Message): –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è.
    """
    keyboard = InlineKeyboardMarkup()
    btn_menu = InlineKeyboardButton('–ú–µ–Ω—é', callback_data='menu')
    keyboard.row(btn_menu)

    try:
        await bot.send_message(message.chat.id, UNKNOWN_COMMAND_TEXT,
                               reply_markup=keyboard)

    except BotBlocked as bot_blocked_error:
        msg_error = (f'–§—É–Ω–∫—Ü–∏—è unknown_command_message –Ω–µ —Å–º–æ–≥–ª–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å '
                     f'—Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é. –ë–æ—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω '
                     f'–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º! {bot_blocked_error}')
        logger.error(msg_error)

    except Exception as error:
        msg_error = (f'–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é '
                     f'–≤ —Ñ—É–Ω–∫—Ü–∏–∏ unknown_command_message! {error}')
        logger.error(msg_error)
